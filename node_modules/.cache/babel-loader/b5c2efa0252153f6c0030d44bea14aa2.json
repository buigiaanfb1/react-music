{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/GIT REPO/react-music/src/components/LibrarySong.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LibrarySong = ({\n  song,\n  songs,\n  id,\n  currentSong,\n  setCurrentSong,\n  setSongs\n}) => {\n  const handleSelectedSong = () => {\n    setSongs(songs.map(song => {\n      return { ...song,\n        active: song.id === id\n      };\n    }));\n    setCurrentSong(song);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `library-song ${song.id === currentSong.id ? \"selected\" : \"\"}`,\n    onClick: handleSelectedSong,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: song.cover\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: song.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: song.artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_c = LibrarySong;\nexport default LibrarySong;\n\nvar _c;\n\n$RefreshReg$(_c, \"LibrarySong\");","map":{"version":3,"sources":["/Users/macbook/Desktop/GIT REPO/react-music/src/components/LibrarySong.js"],"names":["React","LibrarySong","song","songs","id","currentSong","setCurrentSong","setSongs","handleSelectedSong","map","active","cover","name","artist"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AACnBC,EAAAA,IADmB;AAEnBC,EAAAA,KAFmB;AAGnBC,EAAAA,EAHmB;AAInBC,EAAAA,WAJmB;AAKnBC,EAAAA,cALmB;AAMnBC,EAAAA;AANmB,CAAD,KAOd;AACJ,QAAMC,kBAAkB,GAAG,MAAM;AAC/BD,IAAAA,QAAQ,CACNJ,KAAK,CAACM,GAAN,CAAWP,IAAD,IAAU;AAClB,aAAO,EACL,GAAGA,IADE;AAELQ,QAAAA,MAAM,EAAER,IAAI,CAACE,EAAL,KAAYA;AAFf,OAAP;AAID,KALD,CADM,CAAR;AAQAE,IAAAA,cAAc,CAACJ,IAAD,CAAd;AACD,GAVD;;AAWA,sBACE;AACE,IAAA,SAAS,EAAG,gBAAeA,IAAI,CAACE,EAAL,KAAYC,WAAW,CAACD,EAAxB,GAA6B,UAA7B,GAA0C,EAAG,EAD1E;AAEE,IAAA,OAAO,EAAEI,kBAFX;AAAA,4BAIE;AAAK,MAAA,GAAG,EAAEN,IAAI,CAACS;AAAf;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE;AAAA,kBAAKT,IAAI,CAACU;AAAV;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAKV,IAAI,CAACW;AAAV;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA/BD;;KAAMZ,W;AAiCN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\n\nconst LibrarySong = ({\n  song,\n  songs,\n  id,\n  currentSong,\n  setCurrentSong,\n  setSongs,\n}) => {\n  const handleSelectedSong = () => {\n    setSongs(\n      songs.map((song) => {\n        return {\n          ...song,\n          active: song.id === id,\n        };\n      })\n    );\n    setCurrentSong(song);\n  };\n  return (\n    <div\n      className={`library-song ${song.id === currentSong.id ? \"selected\" : \"\"}`}\n      onClick={handleSelectedSong}\n    >\n      <img src={song.cover} />\n      <div className=\"song-description\">\n        <h3>{song.name}</h3>\n        <h4>{song.artist}</h4>\n      </div>\n    </div>\n  );\n};\n\nexport default LibrarySong;\n"]},"metadata":{},"sourceType":"module"}