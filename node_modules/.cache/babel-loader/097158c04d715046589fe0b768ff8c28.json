{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/GIT REPO/react-music/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport data from \"./data\";\nimport \"./styles/app.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [libraryStatus, setLibraryStatus] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${libraryStatus ? \"library-active\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      setLibraryStatus: setLibraryStatus,\n      libraryStatus: libraryStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Song, {\n      currentSong: currentSong,\n      isPlaying: isPlaying\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Player, {\n      songs: songs,\n      isPlaying: isPlaying,\n      setIsPlaying: setIsPlaying,\n      currentSong: currentSong,\n      setCurrentSong: setCurrentSong,\n      setSongs: setSongs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Library, {\n      songs: songs,\n      currentSong: currentSong,\n      setCurrentSong: setCurrentSong,\n      setSongs: setSongs,\n      libraryStatus: libraryStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"dMPBZf91DTnOEy7Im6PsanClbnw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/macbook/Desktop/GIT REPO/react-music/src/App.js"],"names":["React","useState","Library","Nav","Player","Song","data","App","songs","setSongs","currentSong","setCurrentSong","isPlaying","setIsPlaying","libraryStatus","setLibraryStatus"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,mBAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAACK,IAAI,EAAL,CAAlC;AACA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAACO,KAAK,CAAC,CAAD,CAAN,CAA9C;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACa,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,KAAD,CAAlD;AAEA,sBACE;AAAK,IAAA,SAAS,EAAG,OAAMa,aAAa,GAAG,gBAAH,GAAsB,EAAG,EAA7D;AAAA,4BACE,QAAC,GAAD;AAAK,MAAA,gBAAgB,EAAEC,gBAAvB;AAAyC,MAAA,aAAa,EAAED;AAAxD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,WAAW,EAAEJ,WAAnB;AAAgC,MAAA,SAAS,EAAEE;AAA3C;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AACE,MAAA,KAAK,EAAEJ,KADT;AAEE,MAAA,SAAS,EAAEI,SAFb;AAGE,MAAA,YAAY,EAAEC,YAHhB;AAIE,MAAA,WAAW,EAAEH,WAJf;AAKE,MAAA,cAAc,EAAEC,cALlB;AAME,MAAA,QAAQ,EAAEF;AANZ;AAAA;AAAA;AAAA;AAAA,YAHF,eAWE,QAAC,OAAD;AACE,MAAA,KAAK,EAAED,KADT;AAEE,MAAA,WAAW,EAAEE,WAFf;AAGE,MAAA,cAAc,EAAEC,cAHlB;AAIE,MAAA,QAAQ,EAAEF,QAJZ;AAKE,MAAA,aAAa,EAAEK;AALjB;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GA3BQP,G;;KAAAA,G;AA6BT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport data from \"./data\";\nimport \"./styles/app.scss\";\n\nfunction App() {\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [libraryStatus, setLibraryStatus] = useState(false);\n\n  return (\n    <div className={`App ${libraryStatus ? \"library-active\" : \"\"}`}>\n      <Nav setLibraryStatus={setLibraryStatus} libraryStatus={libraryStatus} />\n      <Song currentSong={currentSong} isPlaying={isPlaying} />\n      <Player\n        songs={songs}\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        currentSong={currentSong}\n        setCurrentSong={setCurrentSong}\n        setSongs={setSongs}\n      />\n      <Library\n        songs={songs}\n        currentSong={currentSong}\n        setCurrentSong={setCurrentSong}\n        setSongs={setSongs}\n        libraryStatus={libraryStatus}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}