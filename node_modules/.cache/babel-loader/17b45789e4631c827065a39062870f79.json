{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/GIT REPO/react-music/src/components/Player.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay, faAngleLeft, faAngleRight, faPause } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Player = ({\n  songs,\n  setSongs,\n  isPlaying,\n  setIsPlaying,\n  currentSong,\n  setCurrentSong\n}) => {\n  _s();\n\n  const audioRef = useRef(null);\n  const [time, setTime] = useState({\n    currentTime: 0,\n    duration: 0\n  });\n\n  const handlerTime = e => {\n    let current = e.target.currentTime;\n    let duration = e.target.duration || 0;\n    setTime({\n      currentTime: current,\n      duration\n    });\n  };\n\n  const formatTime = time => {\n    return Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2);\n  };\n\n  const handlerPlaySong = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    }\n  };\n\n  const handlerAutoPlay = () => {\n    isPlaying ? audioRef.current.play() : audioRef.current.pause();\n  };\n\n  const dragHandler = e => {\n    audioRef.current.currentTime = e.target.value;\n    setTime({ ...time,\n      currentTime: e.target.value\n    });\n  };\n\n  const handlerSkip = check => {\n    let index = songs.findIndex(song => {\n      return currentSong.id === song.id;\n    });\n    let newIndex = check + index;\n\n    if (newIndex < 0) {\n      newIndex = songs.length - 1;\n    } else if (newIndex >= songs.length) {\n      newIndex = 0;\n    }\n\n    setCurrentSong(songs[newIndex]);\n    setSongs(songs.map(song => {\n      return { ...song,\n        active: song.id === currentSong.id\n      };\n    }));\n  };\n\n  const handlerEnded = () => {\n    let index = songs.findIndex(song => {\n      return currentSong.id === song.id;\n    });\n\n    if (index == songs.length - 1) {\n      index = 0;\n    } else {\n      index = index + 1;\n    }\n\n    setCurrentSong(songs[index]);\n  };\n\n  const animationPercentage = time.currentTime / time.duration * 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: formatTime(time.currentTime)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track\",\n        style: {\n          background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          min: 0,\n          max: time.duration,\n          value: time.currentTime,\n          onChange: dragHandler,\n          type: \"range\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-track\",\n          style: {\n            transform: `translateX(${animationPercentage}%)`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: formatTime(time.duration)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"play-control\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: \"fa-icon\",\n        icon: faAngleLeft,\n        onClick: () => handlerSkip(-1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: isPlaying ? faPause : faPlay,\n        onClick: handlerPlaySong,\n        className: \"fa-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faAngleRight,\n        onClick: () => handlerSkip(1),\n        className: \"fa-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      src: currentSong.audio,\n      onTimeUpdate: handlerTime,\n      onLoadedData: handlerAutoPlay,\n      onLoadedMetaData: handlerAutoPlay,\n      onLoad: handlerAutoPlay,\n      onEnded: handlerEnded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Player, \"XZXU5OHZ6TaRtmerYVlJmnm3G3Y=\");\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/Users/macbook/Desktop/GIT REPO/react-music/src/components/Player.js"],"names":["React","useState","useRef","FontAwesomeIcon","faPlay","faAngleLeft","faAngleRight","faPause","Player","songs","setSongs","isPlaying","setIsPlaying","currentSong","setCurrentSong","audioRef","time","setTime","currentTime","duration","handlerTime","e","current","target","formatTime","Math","floor","slice","handlerPlaySong","pause","play","handlerAutoPlay","dragHandler","value","handlerSkip","check","index","findIndex","song","id","newIndex","length","map","active","handlerEnded","animationPercentage","background","color","transform","audio"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPlay,\n  faAngleLeft,\n  faAngleRight,\n  faPause,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Player = ({\n  songs,\n  setSongs,\n  isPlaying,\n  setIsPlaying,\n  currentSong,\n  setCurrentSong,\n}) => {\n  const audioRef = useRef(null);\n\n  const [time, setTime] = useState({\n    currentTime: 0,\n    duration: 0,\n  });\n\n  const handlerTime = (e) => {\n    let current = e.target.currentTime;\n    let duration = e.target.duration || 0;\n    setTime({ currentTime: current, duration });\n  };\n\n  const formatTime = (time) => {\n    return (\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\n    );\n  };\n\n  const handlerPlaySong = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    }\n  };\n\n  const handlerAutoPlay = () => {\n    isPlaying ? audioRef.current.play() : audioRef.current.pause();\n  };\n\n  const dragHandler = (e) => {\n    audioRef.current.currentTime = e.target.value;\n    setTime({ ...time, currentTime: e.target.value });\n  };\n\n  const handlerSkip = (check) => {\n    let index = songs.findIndex((song) => {\n      return currentSong.id === song.id;\n    });\n    let newIndex = check + index;\n    if (newIndex < 0) {\n      newIndex = songs.length - 1;\n    } else if (newIndex >= songs.length) {\n      newIndex = 0;\n    }\n    setCurrentSong(songs[newIndex]);\n    setSongs(\n      songs.map((song) => {\n        return {\n          ...song,\n          active: song.id === currentSong.id,\n        };\n      })\n    );\n  };\n\n  const handlerEnded = () => {\n    let index = songs.findIndex((song) => {\n      return currentSong.id === song.id;\n    });\n    if (index == songs.length - 1) {\n      index = 0;\n    } else {\n      index = index + 1;\n    }\n    setCurrentSong(songs[index]);\n  };\n\n  const animationPercentage = (time.currentTime / time.duration) * 100;\n  return (\n    <div className=\"player\">\n      <div className=\"time-control\">\n        <p>{formatTime(time.currentTime)}</p>\n        <div\n          className=\"track\"\n          style={{\n            background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`,\n          }}\n        >\n          <input\n            min={0}\n            max={time.duration}\n            value={time.currentTime}\n            onChange={dragHandler}\n            type=\"range\"\n          />\n          <div\n            className=\"animate-track\"\n            style={{\n              transform: `translateX(${animationPercentage}%)`,\n            }}\n          ></div>\n        </div>\n        <p>{formatTime(time.duration)}</p>\n      </div>\n      <div className=\"play-control\">\n        <FontAwesomeIcon\n          className=\"fa-icon\"\n          icon={faAngleLeft}\n          onClick={() => handlerSkip(-1)}\n        ></FontAwesomeIcon>\n        <FontAwesomeIcon\n          icon={isPlaying ? faPause : faPlay}\n          onClick={handlerPlaySong}\n          className=\"fa-icon\"\n        ></FontAwesomeIcon>\n        <FontAwesomeIcon\n          icon={faAngleRight}\n          onClick={() => handlerSkip(1)}\n          className=\"fa-icon\"\n        ></FontAwesomeIcon>\n      </div>\n      <audio\n        ref={audioRef}\n        src={currentSong.audio}\n        onTimeUpdate={handlerTime}\n        onLoadedData={handlerAutoPlay}\n        onLoadedMetaData={handlerAutoPlay}\n        onLoad={handlerAutoPlay}\n        onEnded={handlerEnded}\n      ></audio>\n    </div>\n  );\n};\n\nexport default Player;\n"]},"metadata":{},"sourceType":"module"}